# Generated by Django 2.2.7 on 2019-11-10 04:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import filer.fields.folder
import filer.fields.image


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cms', '0022_auto_20180620_1551'),
        ('filer', '0011_auto_20190418_0137'),
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Video',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='filer.File')),
                ('poster', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.FILER_IMAGE_MODEL, verbose_name='Poster')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('filer.file',),
        ),
        migrations.CreateModel(
            name='LightGalleryVideo',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='light_gallery_video_lightgalleryvideo', serialize=False, to='cms.CMSPlugin')),
                ('pageThumbWidth', models.CharField(default='150', help_text='Width of thumbnail on page', max_length=255, verbose_name='Page Thumb Width')),
                ('pageThumbHeight', models.CharField(default='150', help_text='Height of thumbnail on page', max_length=255, verbose_name='Page Thumb Height')),
                ('mode', models.CharField(choices=[['lg-slide', 'lg-slide'], ['lg-fade', 'lg-fade'], ['lg-zoom-in', 'lg-zoom-in'], ['lg-zoom-in-big', 'lg-zoom-in-big'], ['lg-zoom-out', 'lg-zoom-out'], ['lg-zoom-out-big', 'lg-zoom-out-big'], ['lg-zoom-out-in', 'lg-zoom-out-in'], ['lg-zoom-in-out', 'lg-zoom-in-out'], ['lg-soft-zoom', 'lg-soft-zoom'], ['lg-scale-up', 'lg-scale-up'], ['lg-slide-circular', 'lg-slide-circular'], ['lg-slide-circular-vertical', 'lg-slide-circular-vertical'], ['lg-slide-vertical', 'lg-slide-vertical'], ['lg-slide-vertical-growth', 'lg-slide-vertical-growth'], ['lg-slide-skew-only', 'lg-slide-skew-only'], ['lg-slide-skew-only-rev', 'lg-slide-skew-only-rev'], ['lg-slide-skew-only-y', 'lg-slide-skew-only-y'], ['lg-slide-skew-only-y-rev', 'lg-slide-skew-only-y-rev'], ['lg-slide-skew', 'lg-slide-skew'], ['lg-slide-skew-rev', 'lg-slide-skew-rev'], ['lg-slide-skew-cross', 'lg-slide-skew-cross'], ['lg-slide-skew-cross-rev', 'lg-slide-skew-cross-rev'], ['lg-slide-skew-ver', 'lg-slide-skew-ver'], ['lg-slide-skew-ver-rev', 'lg-slide-skew-ver-rev'], ['lg-slide-skew-ver-cross', 'lg-slide-skew-ver-cross'], ['lg-slide-skew-ver-cross-rev', 'lg-slide-skew-ver-cross-rev'], ['lg-lollipop', 'lg-lollipop'], ['lg-lollipop-rev', 'lg-lollipop-rev'], ['lg-rotate', 'lg-rotate'], ['lg-rotate-rev', 'lg-rotate-rev'], ['lg-tube', 'lg-tube']], default=['lg-slide', 'lg-slide'], help_text='Type of transition between images', max_length=255, verbose_name='Mode')),
                ('cssEasing', models.CharField(default='ease', help_text='Type of easing to be used for css animations', max_length=255, verbose_name='CSS Easing')),
                ('easing', models.CharField(default='linear', help_text='Type of easing to be used for jquery animations', max_length=255, verbose_name='Easing')),
                ('speed', models.PositiveIntegerField(default=600, help_text='Transition duration (in ms)', verbose_name='Speed')),
                ('height', models.CharField(default='100%', help_text='Height of the gallery', max_length=255, verbose_name='Height')),
                ('width', models.CharField(default='100%', help_text='Width of the gallery', max_length=255, verbose_name='Width')),
                ('addClass', models.CharField(blank=True, default='', help_text='Add custom class for gallery, can be used to set different style for different gallery', max_length=255, verbose_name='Add Class')),
                ('startClass', models.CharField(default='lg-start-zoom', help_text='Starting animation class for the gallery', max_length=255, verbose_name='Add Class')),
                ('backdropDuration', models.PositiveIntegerField(default=150, help_text='Lightgallery backdrop transtion duration. Do not change the value of backdrop via css', verbose_name='Backdrop Duration')),
                ('hideBarsDelay', models.PositiveIntegerField(default=6000, help_text='Delay for hiding gallery controls in ms', verbose_name='Hide Bars Delay')),
                ('useLeft', models.BooleanField(default=False, help_text='Force lightgallery to use css left property instead of transform', verbose_name='Use Left')),
                ('closable', models.BooleanField(default=True, help_text='Allows clicks on dimmer to close gallery', verbose_name='Closable')),
                ('loop', models.BooleanField(default=True, help_text='If false, will disable the ability to loop back to the beginning of the gallery when on the last element', verbose_name='Loop')),
                ('escKey', models.BooleanField(default=True, help_text="Whether the LightGallery could be closed by pressing the 'Esc' key", verbose_name='ESC Key')),
                ('keyPress', models.BooleanField(default=True, help_text='Enable keyboard navigation', verbose_name='Key Press')),
                ('controls', models.BooleanField(default=True, help_text='If false, prev/next buttons will not be displayed', verbose_name='Controls')),
                ('slideEndAnimation', models.BooleanField(default=True, help_text='Enable slideEnd animation', verbose_name='Slide End Animation')),
                ('hideControlOnEnd', models.BooleanField(default=False, help_text='If true, prev/next button will be hidden on first/last image', verbose_name='Hide Control On End')),
                ('mousewheel', models.BooleanField(default=True, help_text='Change slide on mousewheel', verbose_name='Mousewheel')),
                ('preload', models.PositiveIntegerField(default=1, help_text='Number of preload slides. will execute only after the current slide is fully loaded', verbose_name='Preload')),
                ('showAfterLoad', models.BooleanField(default=True, help_text='Show Content once it is fully loaded', verbose_name='Show After Load')),
                ('nextHtml', models.CharField(blank=True, default='', help_text='Custom html for next control', max_length=255, verbose_name='Next Html')),
                ('prevHtml', models.CharField(blank=True, default='', help_text='Custom html for prev control', max_length=255, verbose_name='Prev Html')),
                ('index', models.PositiveIntegerField(default=0, help_text='Allows to set which image/video should load initially', verbose_name='Index')),
                ('iframeMaxWidth', models.CharField(default='100%', help_text='Set maximum width for iframe.', max_length=255, verbose_name='IFrame Max Width')),
                ('download', models.BooleanField(default=True, help_text='Enable download button', verbose_name='Download')),
                ('counter', models.BooleanField(default=True, help_text='Whether to show total number of images and index number of currently displayed image', verbose_name='Counter')),
                ('appendCounterTo', models.CharField(default='.lg-toolbar', help_text='Where the counter should be appended', max_length=255, verbose_name='Append Counter To')),
                ('enableDrag', models.BooleanField(default=True, help_text='Enables desktop mouse drag support', verbose_name='Enable Drag')),
                ('enableSwipe', models.BooleanField(default=True, help_text='Enables swipe support', verbose_name='Enable Swipe')),
                ('thumbnails', models.BooleanField(default=True, help_text='Enable/disable thumbnails for this gallery', verbose_name='Enable Thumbnails')),
                ('animateThumb', models.BooleanField(default=True, verbose_name='Enable Thumbnail Animation ')),
                ('currentPagerPosition', models.CharField(choices=[['left', 'Left'], ['middle', 'Middle'], ['right', 'Right']], default='middle', help_text='Position of selected thumbnail', max_length=255, verbose_name='Current Pager Position')),
                ('thumbWidth', models.PositiveIntegerField(default=100, help_text='Width of each thumbnails', verbose_name='Thumb Width')),
                ('thumbContHeight', models.PositiveIntegerField(default=100, help_text='Height of the thumbnail container including padding and border', verbose_name='Thumb Container Height')),
                ('thumbMargin', models.PositiveIntegerField(default=5, help_text='Spacing between each thumbnails', verbose_name='Thumb Margin')),
                ('showThumbByDefault', models.BooleanField(default=True, verbose_name='Show/Hide thumbnails by default')),
                ('toggleThumb', models.BooleanField(default=True, help_text='Whether to display thumbnail toggle button', verbose_name='Toggle Thumbnail Button')),
                ('pullCaptionUp', models.BooleanField(default=True, help_text='Pull captions above thumbnails', verbose_name='Pull Captions Up')),
                ('enableThumbDrag', models.BooleanField(default=True, help_text='Enables desktop mouse drag support for thumbnails', verbose_name='Enable Thumbnail Drag')),
                ('enableThumbSwipe', models.BooleanField(default=True, help_text='Enables thumbnail touch/swipe support for touch devices', verbose_name='Enable Thumbnail Swipe')),
                ('swipeThreshold', models.PositiveIntegerField(default=50, help_text='By setting the swipeThreshold (in px) you can set how far the user must swipe for the next/prev slide', verbose_name='Swipe Threshold')),
                ('zoom', models.BooleanField(default=False, help_text='Enable/disable zoom for this gallery', verbose_name='Enable Zoom')),
                ('zoomScale', models.PositiveIntegerField(default=1, help_text='Value of zoom should be incremented/decremented', verbose_name='Scale')),
                ('zoomEnableZoomAfter', models.PositiveIntegerField(default=50, help_text='Number in ms', verbose_name='Enable Zoom After')),
                ('zoomActualSize', models.BooleanField(default=False, help_text='Enable actual pixel icon', verbose_name='Actual Size')),
                ('fullscreen', models.BooleanField(default=False, help_text='Enable/disable fullscreen for this gallery', verbose_name='Enable Fullscreen')),
                ('pager', models.BooleanField(default=False, help_text='Enable/disable pager for this gallery', verbose_name='Enable Pager')),
                ('hash', models.BooleanField(default=False, help_text='Enable/Disable hash plugin', verbose_name='Enable Hash')),
                ('galleryId', models.PositiveIntegerField(default=1, help_text='Unique id for each gallery. It is mandatory when you use hash plugin for multiple galleries on the same page', verbose_name='Gallery Id')),
                ('share', models.BooleanField(default=True, verbose_name='Enable/Disable share plugin')),
                ('facebook', models.BooleanField(default=True, verbose_name='Enable Facebook share')),
                ('facebookDropdownText', models.CharField(default='Facebook', max_length=255, verbose_name='Facebook dropdown text')),
                ('twitter', models.BooleanField(default=True, verbose_name='Enable Twitter share')),
                ('twitterDropdownText', models.CharField(default='Twitter', max_length=255, verbose_name='Twitter dropdown text')),
                ('googlePlus', models.BooleanField(default=True, verbose_name='Enable googlePlus share')),
                ('googlePlusDropdownText', models.CharField(default='GooglePlus', max_length=255, verbose_name='GooglePlus dropdown text')),
                ('pinterest', models.BooleanField(default=True, verbose_name='Enable Pinterest share')),
                ('pinterestDropdownText', models.CharField(default='Pinterest', max_length=255, verbose_name='Pinterest dropdown text')),
                ('folder', filer.fields.folder.FilerFolderField(on_delete=django.db.models.deletion.CASCADE, to='filer.Folder', verbose_name='Folder')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
    ]
